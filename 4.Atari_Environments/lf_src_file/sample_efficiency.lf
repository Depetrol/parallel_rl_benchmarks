target Python {
  single-threaded: false
}

preamble {=
  import gym
  import numpy as np
  import time
  import random
  random.seed(1)

  # Configuration parameters
  NUM_ENVS = 15
  NUM_STEPS = 10000
  SEED = 1
=}

reactor EnvReactor {
  input seed
  output infos

  reaction(startup) {=
    random.seed(SEED)
    self.env = gym.make("CartPole-v1")
    self.env.seed(SEED)
    self.rng = np.random.RandomState(SEED)
    self.env.reset()
  =}

  reaction(seed) -> infos {=
    random.seed(SEED)
    action = self.rng.randint(0, 2)
    result = self.env.step(action)

    if result[2] or result[3]:
        self.env.reset()

    infos.set(result)
  =}
}

reactor serverReactor {
  output seed
  input[15] infos
  state step_num
  state start_time

  reaction(startup) -> seed {=
    self.step_num = 0
    seed.set(self.step_num)
  =}

  reaction(infos) -> seed {=
    if self.step_num == 1:
        self.start_time = time.time()

    if self.step_num == NUM_STEPS:
        end_time = time.time()
        print(f"Total time taken: {end_time - self.start_time:.2f} seconds")
        request_stop()

    # Perform a step in each environment using the current step number as seed
    print(f"Step: {self.step_num + 1}")

    for i in range(15):
        temp = infos[i].value
        print(f"Env {i + 1}: Observations={temp[0]}, Reward={temp[1]}, Terminated={temp[2]}")

    print("\n")

    self.step_num+=1
    seed.set(self.step_num)
  =}
}

main reactor {
  client = new[15] EnvReactor()
  server = new serverReactor()
  (server.seed)+ -> client.seed after 0
  client.infos -> server.infos
}
